<!DOCTYPE html>
<html lang="pl">

<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Intencje</title>
    <script src="https://kit.fontawesome.com/190892c2b3.js" crossorigin="anonymous"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Aboreto&family=Source+Sans+Pro:wght@400;700&display=swap"
        rel="stylesheet">
    <link href="https://unpkg.com/aos@2.3.1/dist/aos.css" rel="stylesheet">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.9.1/font/bootstrap-icons.css">
    <link href="/dist/css/hamburger.min.css" rel="stylesheet">
    <link rel="stylesheet" href="/dist/css/main.min.css">

</head>

<body>
    <!-- @include 'logo.kit' -->
    <header style="margin-top: 6em;" class="header__intencja">
        <!-- <div class="intencja">
            <div class="intencja__img">
                <h1 class="intencja__header">Prześlij intencję z prośbą o modlitwę</h1>
                <div class="containerIntencja">
                    <form class="intencja__form" id="form" onsubmit="return submitFunc()"
                        action="https://formsubmit.co/5eb3ecd310533853068607c401bb0cfd" method="POST">
                        <input type="text" name="_honey" style="display:none">
                        <input type="hidden" name="_subject" value="E-mail ze strony Domu Pięknej Miłości - INTENCJE">
                        <input type="hidden" name="_template" value="table">
                        <input type="hidden" name="_next" value="https://dompieknejmilosci.pl/thankyouIntention.html">
                        <input class="intencja__form-group" id="Imię" type="text" name="Imię" placeholder="Twoje Imie">
                        <input class="intencja__form-group" type="email" name="Email" id="email" placeholder="Email"
                            required
                            oninvalid="this.setCustomValidity('Proszę wypełnij to polę. Email jest wymagany.')">
                        <textarea class="intencja__form-group intencja__form-groupText" id="intention" type="text"
                            name="Wiadomość" maxlength="500" placeholder="Intencja" required></textarea>
                        <button class="intencja__form-btn" id="btn" type="submit">Wyślij</button>

                    </form>
                </div>
            </div>
        </div> -->
        <div class="intencja">
            <div class="intencja__img">
                <h1 class="intencja__header">Prześlij intencję z prośbą o modlitwę</h1>
                <div class="containerIntencja">
                    <form class="intencja__form" id="form" method="POST">
                        <input class="intencja__form-group" id="name" type="text" name="name" placeholder="Twoje Imie"
                            required>
                        <input class="intencja__form-group" type="email" name="email" id="email" placeholder="Email"
                            required>
                        <textarea class="intencja__form-group intencja__form-groupText" id="intention" type="text"
                            name="Message" maxlength="500" placeholder="Intencja" required></textarea>
                        <button class="intencja__form-btn" id="btn" type="submit" name="button">Wyślij</button>

                    </form>
                </div>
            </div>
        </div>
    </header>

    <main>
        <section class="added">
            <h2 class="added__text">Wasze intencje:</h2>
            <div class="added__intencja" id="taskBoard">
            </div>
        </section>
    </main>


    <!-- @include 'footer.kit' -->

    <script src="https://unpkg.com/aos@2.3.1/dist/aos.js"></script>
    <script>
        AOS.init();
    </script>
    <!-- <script type="text/javascript">
        const intention = document.getElementById("intention");
        const name = document.getElementById("name");
        const btnInsert = document.getElementById("btn");
        const lsOutput = document.getElementById("taskBoard");

        btnInsert.onclick = function () {
            const key = intention.value;
            const value = name.value;

            if (key && value) {
                sessionStorage.setItem(key, value);
                location.reload();
            }
        }

        for (let i = 0; i < sessionStorage.length; i++) {
            let childcount = document.getElementById("taskBoard").querySelectorAll('h2').length;
            if (childcount >= 10) {
                let select = document.getElementById('taskBoard');
                select.lastChild.innerHTML = ''
            } else {
                const key = sessionStorage.key(i);
                const value = sessionStorage.getItem(key);
                lsOutput.innerHTML = `<h2 data-aos="zoom-in-up" data-aos-duration="2500">${key} ~ ${value}</h2>` + lsOutput.innerHTML;
            }
        }

    </script> -->
    <script type="text/javascript">
        document.addEventListener('DOMContentLoaded', async function () {
            async function fetchVariables() {
                try {
                    const response = await fetch('http://localhost:3000/envint');
                    const envVariables = await response.json();
                    return envVariables;
                } catch (error) {
                    console.error('Error fetching environment variables:', error);
                    return {};
                }
            }

            let intention, name, email, btnInsert, lsOutput;

            async function getAndPost() {
                const envVariables = await fetchVariables();

                intention = document.getElementById("intention");
                name = document.getElementById("name");
                email = document.getElementById("email");
                btnInsert = document.getElementById("btn");
                lsOutput = document.getElementById("taskBoard");
                baseUrl = envVariables.PORT;

                await getData(baseUrl, lsOutput);
                // btnInsert.addEventListener('click', validateAndPostData);
                document.getElementById("form").addEventListener('submit', validateAndPostData);

            }

            function validateAndPostData(e) {
                e.preventDefault();

                // Check if name, email, and intention are not empty
                if (name.value.trim() === '' || email.value.trim() === '' || intention.value.trim() === '') {
                    alert("Proszę wypełnić wszystkie pola.");
                    return;
                }

                const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                if (!emailRegex.test(email.value)) {
                    alert("Proszę podać poprawny adres email.");
                    return;
                }

                postData(e, name.value, email.value, intention.value, baseUrl);
            }

            // Function to perform GET request
            async function getData(baseUrl, lsOutput) {
                // e.preventDefault();
                try {
                    const usersUrl = `${baseUrl}`;
                    const res = await fetch(usersUrl);
                    const users = await res.json();

                    lsOutput.innerHTML = '';

                    // Add intentions to the task board
                    for (let i = users.length - 1; i >= 0; i--) {
                        if (i >= users.length - 20) {
                            const user = users[i];
                            lsOutput.innerHTML += `<h2 data-aos="zoom-in-up" data-aos-duration="2500">${user.intention} ~ ${user.name}</h2>`;
                        }
                    }

                } catch (error) {
                    console.error('Error fetching users:', error);
                }
            }

            // Function to perform POST request
            async function postData(e, name, email, intention, baseUrl) {
                e.preventDefault();
                try {
                    const usersUrl = `${baseUrl}`;
                    const res = await fetch(usersUrl, {
                        method: 'POST',
                        headers: { "Content-Type": "application/json" },
                        body: JSON.stringify({ 'name': name, 'email': email, 'intention': intention })
                    });
                    window.location.href = 'https://dompieknejmilosci.pl/thankyouIntention.html';
                } catch (error) {
                    console.error('Error adding new user:', error);
                }
            }

            getAndPost();
        });

    </script>



    <!-- <script type="text/javascript">
        fetch('intencje.json')
            .then(function (response) {
                return response.json();
            })
            .then(function (data) {
                appendData(data);
            })
            .catch(function (err) {
                console.log('error: ' + err);
            });

        function appendData(data) {
            let mainContainer = document.getElementById("taskBoard");

            for (let i = 0; i < data.length; i++) {
                let h2Main = document.createElement("h2");
                h2Main.setAttribute("data-aos", "zoom-in-up")
                h2Main.setAttribute("data-aos-duration", "2500")
                h2Main.innerHTML = data[i].intencja + ' ~ ' + data[i].imie

                mainContainer.prepend(h2Main);
            }
        }
    </script> -->
    <script src="/dist/js/main.min.js"></script>

</body>

</html>